basePath: /
definitions:
  models.ToDoDTO:
    properties:
      done:
        type: boolean
      id:
        type: string
      plannedDate:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API zur Verwaltung von ToDos.
  title: ToDo Inventory API
  version: "1.0"
paths:
  /list:
    get:
      description: Returns a list of all todos
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ToDoDTO'
            type: array
        "500":
          description: Internal Server Error
      summary: Get all todos
  /todo:
    get:
      description: Returns a list of all todos (fitting to the filters)
      parameters:
      - description: Filter by done status
        in: query
        name: done
        type: boolean
      - description: Filter by planned date (YYYY-MM-DD)
        in: query
        name: date
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ToDoDTO'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get all todos (with filters)
    post:
      description: Creates a new todo
      parameters:
      - description: New todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.ToDoDTO'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ToDoDTO'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create new todo
    put:
      description: Updates the todo with the given ID. The existing item will be completely
        overwritten by the provided data. The item will be identified by the ID of
        the item.
      parameters:
      - description: Updated ToDo object
        in: body
        name: ToDo
        required: true
        schema:
          $ref: '#/definitions/models.ToDoDTO'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ToDoDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Update a todo
  /todo/{id}:
    delete:
      description: Deletes exactly one todo by ID
      parameters:
      - description: ID of the todo
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Delete a todo by ID
    get:
      description: Returns exactly one todo with the given ID
      parameters:
      - description: ID of the todo
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ToDoDTO'
            type: array
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get a todo by ID
swagger: "2.0"
